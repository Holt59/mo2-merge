import os

Import('qt_env')

env = qt_env.Clone()

env.AppendUnique(CPPDEFINES = [
    'PROXYPYTHON_LIBRARY',
    # suppress a few warnings caused by boost vs vc++ paranoia
    '_SCL_SECURE_NO_WARNINGS'
])

env.AppendUnique(CPPPATH = [
    '${BOOSTPATH}',
    '..\\..\\pythonRunner'
])

env.AppendUnique(LIBS = 'shell32')

runner = env.File(os.path.join('..', '..', 'pythonRunner', 'pythonRunner.dll'))

env.AppendUnique(RCFLAGS = [
    '/dSCONS_VARIANT',
    '/i"%s"' % runner.dir
])

# Make sure we have the proper dependencies so it gets built
env.Depends('embedrunner.res', runner)

# There's a whole load of unused C++ files in here.
lib = env.SharedLibrary('proxyPython',
                        [ 'proxypython.cpp' ] + env.RES(env.Glob('*.rc')))

env.InstallModule(lib)

res = env['QT_USED_MODULES']
Return('res')
