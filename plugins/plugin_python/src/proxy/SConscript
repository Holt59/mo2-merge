import os

Import('qt_env')

env = qt_env.Clone()

env.AppendUnique(CPPDEFINES = [
    'PROXYPYTHON_LIBRARY',
    # suppress a few warnings caused by boost vs vc++ paranoia
    '_SCL_SECURE_NO_WARNINGS'
])

env.AppendUnique(CPPPATH = [
    '${BOOSTPATH}',
    '..\\..\\pythonRunner'
])

env.AppendUnique(LIBS = 'shell32')

runner = env.File(os.path.join('..', '..', 'pythonRunner', 'pythonRunner.dll'))

runner_env = env.Clone()
runner_env.AppendUnique(CPPDEFINES = 'SCONS_BUILD')
runner_env.AppendUnique(CPPPATH = runner.dir)
rc = runner_env.RES('embedrunner.rc')
# Make sure we have the proper dependencies so it gets built
runner_env.Depends(rc, runner)

# There's a whole load of unused C++ files in here.
lib = env.SharedLibrary('proxyPython', [ 'proxypython.cpp' ] + rc)

env.InstallModule(lib)

res = env['QT_USED_MODULES']
Return('res')
