CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

CMAKE_POLICY(SET CMP0020 NEW)
CMAKE_POLICY(SET CMP0043 NEW)

SET(PROJ_AUTHOR Tannin)
SET(PROJ_ARCH x86)
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
  SET(PROJ_ARCH x64)
endif()


SET(${PROJ_NAME}_SRCS
  github.cpp
)

SET(${PROJ_NAME}_HDRS
  github.h
)

# Qt5
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOMOC ON)
FIND_PACKAGE(Qt5Core REQUIRED)
FIND_PACKAGE(Qt5Network REQUIRED)

INCLUDE_DIRECTORIES(${Qt5Core_DIR}/../../../include)
INCLUDE_DIRECTORIES(${Qt5Core_DIR}/../../../include/QtCore)

ADD_DEFINITIONS(-DUNICODE -D_UNICODE)
ADD_LIBRARY(${PROJ_NAME} STATIC ${${PROJ_NAME}_HDRS} ${${PROJ_NAME}_SRCS})
TARGET_LINK_LIBRARIES(${PROJ_NAME} Qt5::Core Qt5::Network)
IF(MSVC)
    SET_TARGET_PROPERTIES(${PROJ_NAME} PROPERTIES COMPILE_FLAGS /GL)
    SET_TARGET_PROPERTIES(${PROJ_NAME} PROPERTIES LINK_FLAGS_RELWITHDEBINFO "/LARGEADDRESSAWARE ${OPTIMIZE_LINK_FLAGS}")
ELSE(MSVC)
    SET_TARGET_PROPERTIES(${PROJ_NAME} PROPERTIES COMPILE_FLAGS -std=c++11)
ENDIF(MSVC)
###############
## Installation

INSTALL(TARGETS ${PROJ_NAME}
        ARCHIVE DESTINATION libs)
